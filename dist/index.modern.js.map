{"version":3,"file":"index.modern.js","sources":["../index.js"],"sourcesContent":["const KEYCODE = {\r\n  LEFT: 37,\r\n  UP: 38,\r\n  RIGHT: 39,\r\n  DOWN: 40,\r\n}\r\n\r\nconst state = new Map()\r\n// when container or children get focus\r\nconst onFocusin = e => {\r\n  const {currentTarget: rover} = e\r\n  if (state.get('last_rover') == rover) return\r\n  if (state.has(rover)) {\r\n    activate(rover, state.get(rover).active)\r\n    state.set('last_rover', rover)\r\n  }\r\n}\r\nconst onKeydown = e => {\r\n  const {currentTarget: rover} = e\r\n  switch (e.keyCode) {\r\n    case KEYCODE[isRtl ? 'LEFT' : 'RIGHT']:\r\n    case KEYCODE.DOWN:\r\n      e.preventDefault()\r\n      focusNextItem(rover)\r\n      break\r\n    case KEYCODE[isRtl ? 'RIGHT' : 'LEFT']:\r\n    case KEYCODE.UP:\r\n      e.preventDefault()\r\n      focusPreviousItem(rover)\r\n      break\r\n  }\r\n}\r\nconst mo = new MutationObserver((mutationList, observer) =>{\r\n  const stateElementsSet = new Set();\r\n  state.forEach((v,k) =>{\r\n    stateElementsSet.add(k.classList[0])\r\n  } )\r\n  mutationList\r\n    .filter(x => x.removedNodes.length > 0)\r\n    .forEach(mutation => {\r\n      mutation.removedNodes.forEach(removedEl => {\r\n      if (removedEl.nodeType !== 1) return //only elements\r\n        state.forEach((val,key) => {\r\n          if (key ==='last_rover') return;\r\n          if (removedEl.contains(key)) {\r\n            const currentEl = val;\r\n            key.removeEventListener('focusin', onFocusin)\r\n            key.removeEventListener('keydown', onKeydown)\r\n            state.delete(key)\r\n            currentEl.targets.forEach(a => a.tabIndex = '') \r\n            const keys = [...state.keys()]?.filter(x => x!=='last_rover')           \r\n            if (keys.length === 0) {\r\n              state.clear();\r\n              // console.log('stop observing');\r\n              mo.disconnect()\r\n            }\r\n          }\r\n      })\r\n    })\r\n      \r\n   })\r\n })         \r\n\r\nexport const rovingIndex = ({element:rover, target:selector}) => {\r\n  const isRtl = window.getComputedStyle(document.documentElement).direction === 'rtl';\r\n  // this api allows empty or a query string\r\n  const target_query = selector || ':scope *'\r\n  const targets = rover.querySelectorAll(target_query)\r\n  const startingPoint = targets[0]\r\n\r\n  // take container out of the focus flow\r\n  rover.tabIndex = -1\r\n  // and all the children\r\n  targets.forEach(a => a.tabIndex = -1)\r\n  // except the first target, that accepts focus\r\n  startingPoint.tabIndex = 0\r\n\r\n  // with the roving container as the key\r\n  // save some state and handy references\r\n  state.set(rover, {\r\n    targets,\r\n    active: startingPoint,\r\n    index: 0,\r\n  })\r\n\r\n  rover.addEventListener('focusin', onFocusin)\r\n\r\n  // watch for arrow keys\r\n  \r\n  rover.addEventListener('keydown', onKeydown)\r\n\r\n  //  replace rover.addEventListener('DOMNodeRemovedFromDocument', cleanup)\r\n  // with mutationObserver\r\n  mo.observe(document, {\r\n    childList: true,\r\n    subtree: true\r\n  }) \r\n}\r\n\r\nconst focusNextItem = rover => {\r\n  const rx = state.get(rover)\r\n\r\n  // increment state index\r\n  rx.index += 1\r\n\r\n  // clamp navigation to target bounds\r\n  if (rx.index > rx.targets.length - 1)\r\n    rx.index = rx.targets.length - 1\r\n\r\n  // use rover index state to find next\r\n  let next = rx.targets[rx.index]\r\n\r\n  // found something, activate it\r\n  next && activate(rover, next)\r\n}\r\n\r\nconst focusPreviousItem = rover => {\r\n  const rx = state.get(rover)\r\n\r\n  // decrement from the state index\r\n  rx.index -= 1\r\n\r\n  // clamp to 0 and above only\r\n  if (rx.index < 1)\r\n    rx.index = 0\r\n\r\n  // use rover index state to find next\r\n  let prev = rx.targets[rx.index]\r\n\r\n  // found something, activate it\r\n  prev && activate(rover, prev)\r\n}\r\n\r\nconst activate = (rover, item) => {\r\n  const rx = state.get(rover)\r\n\r\n  // remove old tab index item\r\n  rx.active.tabIndex = -1\r\n\r\n  // set new active item and focus it\r\n  rx.active = item\r\n  rx.active.tabIndex = 0\r\n  rx.active.focus()\r\n}\r\n"],"names":["KEYCODE","LEFT","UP","RIGHT","DOWN","state","Map","onFocusin","e","currentTarget","rover","get","has","activate","active","set","onKeydown","keyCode","isRtl","preventDefault","focusNextItem","focusPreviousItem","mo","MutationObserver","mutationList","observer","stateElementsSet","Set","forEach","v","k","add","classList","filter","x","removedNodes","length","mutation","removedEl","nodeType","val","key","contains","currentEl","removeEventListener","delete","targets","a","tabIndex","keys","_ref","clear","disconnect","rovingIndex","element","target","selector","window","getComputedStyle","document","documentElement","querySelectorAll","startingPoint","index","addEventListener","observe","childList","subtree","rx","next","prev","item","focus"],"mappings":"AAAA,MAAMA,EAAU,CACdC,KAAM,GACNC,GAAI,GACJC,MAAO,GACPC,KAAM,IAGFC,EAAQ,IAAIC,IAEZC,EAAYC,IAChB,MAAOC,cAAeC,GAASF,EAC3BH,EAAMM,IAAI,eAAiBD,GAC3BL,EAAMO,IAAIF,KACZG,EAASH,EAAOL,EAAMM,IAAID,GAAOI,QACjCT,EAAMU,IAAI,aAAcL,KAGtBM,EAAYR,IAChB,MAAOC,cAAeC,GAASF,EAC/B,OAAQA,EAAES,SACR,KAAKjB,EAAQkB,MAAQ,OAAS,SAC9B,KAAKlB,EAAQI,KACXI,EAAEW,iBACFC,EAAcV,GACd,MACF,KAAKV,EAAQkB,MAAQ,QAAU,QAC/B,KAAKlB,EAAQE,GACXM,EAAEW,iBACFE,EAAkBX,KAIlBY,EAAK,IAAIC,iBAAiB,CAACC,EAAcC,KAC7C,MAAMC,EAAmB,IAAIC,IAC7BtB,EAAMuB,QAAQ,CAACC,EAAEC,KACfJ,EAAiBK,IAAID,EAAEE,UAAU,MAEnCR,EACGS,OAAOC,GAAKA,EAAEC,aAAaC,OAAS,GACpCR,QAAQS,IACPA,EAASF,aAAaP,QAAQU,IACH,IAAvBA,EAAUC,UACZlC,EAAMuB,QAAQ,CAACY,EAAIC,KACjB,GAAW,eAAPA,GACAH,EAAUI,SAASD,GAAM,OAC3B,MAAME,EAAYH,EAClBC,EAAIG,oBAAoB,UAAWrC,GACnCkC,EAAIG,oBAAoB,UAAW5B,GACnCX,EAAMwC,OAAOJ,GACbE,EAAUG,QAAQlB,QAAQmB,GAAKA,EAAEC,SAAW,IAExB,cADP,IAAI3C,EAAM4C,gBAAVC,EAAmBjB,OAAOC,GAAS,eAAJA,IACnCE,SACP/B,EAAM8C,QAEN7B,EAAG8B,uBASJC,EAAc,EAAEC,QAAQ5C,EAAO6C,OAAOC,MACnCC,OAAOC,iBAAiBC,SAASC,iBAE/C,MACMd,EAAUpC,EAAMmD,iBADDL,GAAY,YAE3BM,EAAgBhB,EAAQ,GAG9BpC,EAAMsC,UAAY,EAElBF,EAAQlB,QAAQmB,GAAKA,EAAEC,UAAY,GAEnCc,EAAcd,SAAW,EAIzB3C,EAAMU,IAAIL,EAAO,CACfoC,QAAAA,EACAhC,OAAQgD,EACRC,MAAO,IAGTrD,EAAMsD,iBAAiB,UAAWzD,GAIlCG,EAAMsD,iBAAiB,UAAWhD,GAIlCM,EAAG2C,QAAQN,SAAU,CACnBO,WAAW,EACXC,SAAS,KAIP/C,EAAgBV,IACpB,MAAM0D,EAAK/D,EAAMM,IAAID,GAGrB0D,EAAGL,OAAS,EAGRK,EAAGL,MAAQK,EAAGtB,QAAQV,OAAS,IACjCgC,EAAGL,MAAQK,EAAGtB,QAAQV,OAAS,GAGjC,IAAIiC,EAAOD,EAAGtB,QAAQsB,EAAGL,OAGzBM,GAAQxD,EAASH,EAAO2D,IAGpBhD,EAAoBX,IACxB,MAAM0D,EAAK/D,EAAMM,IAAID,GAGrB0D,EAAGL,OAAS,EAGRK,EAAGL,MAAQ,IACbK,EAAGL,MAAQ,GAGb,IAAIO,EAAOF,EAAGtB,QAAQsB,EAAGL,OAGzBO,GAAQzD,EAASH,EAAO4D,IAGpBzD,EAAW,CAACH,EAAO6D,KACvB,MAAMH,EAAK/D,EAAMM,IAAID,GAGrB0D,EAAGtD,OAAOkC,UAAY,EAGtBoB,EAAGtD,OAASyD,EACZH,EAAGtD,OAAOkC,SAAW,EACrBoB,EAAGtD,OAAO0D"}