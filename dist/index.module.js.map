{"version":3,"file":"index.module.js","sources":["../index.js"],"sourcesContent":["const KEYCODE = {\r\n  LEFT: 37,\r\n  UP: 38,\r\n  RIGHT: 39,\r\n  DOWN: 40,\r\n}\r\n\r\nconst state = new Map()\r\n// when container or children get focus\r\nconst onFocusin = e => {\r\n  const {currentTarget: rover} = e\r\n  if (state.get('last_rover') == rover) return\r\n  if (state.has(rover)) {\r\n    activate(rover, state.get(rover).active)\r\n    state.set('last_rover', rover)\r\n  }\r\n}\r\nconst onKeydown = e => {\r\n  const {currentTarget: rover} = e\r\n  switch (e.keyCode) {\r\n    case KEYCODE[isRtl ? 'LEFT' : 'RIGHT']:\r\n    case KEYCODE.DOWN:\r\n      e.preventDefault()\r\n      focusNextItem(rover)\r\n      break\r\n    case KEYCODE[isRtl ? 'RIGHT' : 'LEFT']:\r\n    case KEYCODE.UP:\r\n      e.preventDefault()\r\n      focusPreviousItem(rover)\r\n      break\r\n  }\r\n}\r\nconst mo = new MutationObserver((mutationList, observer) =>{\r\n  const stateElementsSet = new Set();\r\n  state.forEach((v,k) =>{\r\n    stateElementsSet.add(k.classList[0])\r\n  } )\r\n  mutationList\r\n    .filter(x => x.removedNodes.length > 0)\r\n    .forEach(mutation => {\r\n      mutation.removedNodes.forEach(removedEl => {\r\n      if (removedEl.nodeType !== 1) return //only elements\r\n        state.forEach((val,key) => {\r\n          if (key ==='last_rover') return;\r\n          if (removedEl.contains(key)) {\r\n            const currentEl = val;\r\n            key.removeEventListener('focusin', onFocusin)\r\n            key.removeEventListener('keydown', onKeydown)\r\n            state.delete(key)\r\n            currentEl.targets.forEach(a => a.tabIndex = '') \r\n            const keys = [...state.keys()]?.filter(x => x!=='last_rover')           \r\n            if (keys.length === 0) {\r\n              state.clear();\r\n              // console.log('stop observing');\r\n              mo.disconnect()\r\n            }\r\n          }\r\n      })\r\n    })\r\n      \r\n   })\r\n })         \r\n\r\nexport const rovingIndex = ({element:rover, target:selector}) => {\r\n  const isRtl = window.getComputedStyle(document.documentElement).direction === 'rtl';\r\n  // this api allows empty or a query string\r\n  const target_query = selector || ':scope *'\r\n  const targets = rover.querySelectorAll(target_query)\r\n  const startingPoint = targets[0]\r\n\r\n  // take container out of the focus flow\r\n  rover.tabIndex = -1\r\n  // and all the children\r\n  targets.forEach(a => a.tabIndex = -1)\r\n  // except the first target, that accepts focus\r\n  startingPoint.tabIndex = 0\r\n\r\n  // with the roving container as the key\r\n  // save some state and handy references\r\n  state.set(rover, {\r\n    targets,\r\n    active: startingPoint,\r\n    index: 0,\r\n  })\r\n\r\n  rover.addEventListener('focusin', onFocusin)\r\n\r\n  // watch for arrow keys\r\n  \r\n  rover.addEventListener('keydown', onKeydown)\r\n\r\n  //  replace rover.addEventListener('DOMNodeRemovedFromDocument', cleanup)\r\n  // with mutationObserver\r\n  mo.observe(document, {\r\n    childList: true,\r\n    subtree: true\r\n  }) \r\n}\r\n\r\nconst focusNextItem = rover => {\r\n  const rx = state.get(rover)\r\n\r\n  // increment state index\r\n  rx.index += 1\r\n\r\n  // clamp navigation to target bounds\r\n  if (rx.index > rx.targets.length - 1)\r\n    rx.index = rx.targets.length - 1\r\n\r\n  // use rover index state to find next\r\n  let next = rx.targets[rx.index]\r\n\r\n  // found something, activate it\r\n  next && activate(rover, next)\r\n}\r\n\r\nconst focusPreviousItem = rover => {\r\n  const rx = state.get(rover)\r\n\r\n  // decrement from the state index\r\n  rx.index -= 1\r\n\r\n  // clamp to 0 and above only\r\n  if (rx.index < 1)\r\n    rx.index = 0\r\n\r\n  // use rover index state to find next\r\n  let prev = rx.targets[rx.index]\r\n\r\n  // found something, activate it\r\n  prev && activate(rover, prev)\r\n}\r\n\r\nconst activate = (rover, item) => {\r\n  const rx = state.get(rover)\r\n\r\n  // remove old tab index item\r\n  rx.active.tabIndex = -1\r\n\r\n  // set new active item and focus it\r\n  rx.active = item\r\n  rx.active.tabIndex = 0\r\n  rx.active.focus()\r\n}\r\n"],"names":["KEYCODE","LEFT","UP","RIGHT","DOWN","state","Map","onFocusin","e","rover","currentTarget","get","has","activate","active","set","onKeydown","keyCode","isRtl","preventDefault","focusNextItem","focusPreviousItem","mo","MutationObserver","mutationList","observer","stateElementsSet","Set","forEach","v","k","add","classList","filter","x","removedNodes","length","mutation","removedEl","nodeType","val","key","contains","currentEl","removeEventListener","targets","a","tabIndex","keys","_ref","clear","disconnect","rovingIndex","element","selector","target","window","getComputedStyle","document","documentElement","querySelectorAll","startingPoint","index","addEventListener","observe","childList","subtree","rx","next","prev","item","focus"],"mappings":"AAAA,IAAMA,EAAU,CACdC,KAAM,GACNC,GAAI,GACJC,MAAO,GACPC,KAAM,IAGFC,EAAQ,IAAIC,IAEZC,EAAY,SAAAC,GAChB,IAAsBC,EAASD,EAAxBE,cACHL,EAAMM,IAAI,eAAiBF,GAC3BJ,EAAMO,IAAIH,KACZI,EAASJ,EAAOJ,EAAMM,IAAIF,GAAOK,QACjCT,EAAMU,IAAI,aAAcN,KAGtBO,EAAY,SAAAR,GAChB,IAAsBC,EAASD,EAAxBE,cACP,OAAQF,EAAES,SACR,KAAKjB,EAAQkB,MAAQ,OAAS,SAC9B,KAAKlB,EAAQI,KACXI,EAAEW,iBACFC,EAAcX,GACd,MACF,KAAKT,EAAQkB,MAAQ,QAAU,QAC/B,KAAKlB,EAAQE,GACXM,EAAEW,iBACFE,EAAkBZ,KAIlBa,EAAK,IAAIC,iBAAiB,SAACC,EAAcC,GAC7C,IAAMC,EAAmB,IAAIC,IAC7BtB,EAAMuB,QAAQ,SAACC,EAAEC,GACfJ,EAAiBK,IAAID,EAAEE,UAAU,MAEnCR,EACGS,OAAO,SAAAC,UAAKA,EAAEC,aAAaC,OAAS,IACpCR,QAAQ,SAAAS,GACPA,EAASF,aAAaP,QAAQ,SAAAU,GACH,IAAvBA,EAAUC,UACZlC,EAAMuB,QAAQ,SAACY,EAAIC,GACjB,GAAW,eAAPA,GACAH,EAAUI,SAASD,GAAM,OACrBE,EAAYH,EAClBC,EAAIG,oBAAoB,UAAWrC,GACnCkC,EAAIG,oBAAoB,UAAW5B,GACnCX,SAAaoC,GACbE,EAAUE,QAAQjB,QAAQ,SAAAkB,UAAKA,EAAEC,SAAW,KAExB,wBADH1C,EAAM2C,gBAAVC,EAAmBhB,OAAO,SAAAC,SAAS,eAAJA,KACnCE,SACP/B,EAAM6C,QAEN5B,EAAG6B,uBASJC,EAAc,gBAAU3C,IAAR4C,QAAsBC,IAAPC,OAC5BC,OAAOC,iBAAiBC,SAASC,iBAE/C,IACMd,EAAUpC,EAAMmD,iBADDN,GAAY,YAE3BO,EAAgBhB,EAAQ,GAG9BpC,EAAMsC,UAAY,EAElBF,EAAQjB,QAAQ,SAAAkB,UAAKA,EAAEC,UAAY,IAEnCc,EAAcd,SAAW,EAIzB1C,EAAMU,IAAIN,EAAO,CACfoC,QAAAA,EACA/B,OAAQ+C,EACRC,MAAO,IAGTrD,EAAMsD,iBAAiB,UAAWxD,GAIlCE,EAAMsD,iBAAiB,UAAW/C,GAIlCM,EAAG0C,QAAQN,SAAU,CACnBO,WAAW,EACXC,SAAS,KAIP9C,EAAgB,SAAAX,GACpB,IAAM0D,EAAK9D,EAAMM,IAAIF,GAGrB0D,EAAGL,OAAS,EAGRK,EAAGL,MAAQK,EAAGtB,QAAQT,OAAS,IACjC+B,EAAGL,MAAQK,EAAGtB,QAAQT,OAAS,GAGjC,IAAIgC,EAAOD,EAAGtB,QAAQsB,EAAGL,OAGzBM,GAAQvD,EAASJ,EAAO2D,IAGpB/C,EAAoB,SAAAZ,GACxB,IAAM0D,EAAK9D,EAAMM,IAAIF,GAGrB0D,EAAGL,OAAS,EAGRK,EAAGL,MAAQ,IACbK,EAAGL,MAAQ,GAGb,IAAIO,EAAOF,EAAGtB,QAAQsB,EAAGL,OAGzBO,GAAQxD,EAASJ,EAAO4D,IAGpBxD,EAAW,SAACJ,EAAO6D,GACvB,IAAMH,EAAK9D,EAAMM,IAAIF,GAGrB0D,EAAGrD,OAAOiC,UAAY,EAGtBoB,EAAGrD,OAASwD,EACZH,EAAGrD,OAAOiC,SAAW,EACrBoB,EAAGrD,OAAOyD"}